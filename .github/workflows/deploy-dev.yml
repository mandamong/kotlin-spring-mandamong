name: ci/cd (dev)

on:
  push:
    branches: [ develop ]

jobs:
  deploy:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Inject application.yml
        run: |
          mkdir -p src/main/resources src/test/resources
          echo "${{ secrets.APPLICATION }}" > src/main/resources/application.yml
          echo "${{ secrets.APPLICATION }}" > src/test/resources/application.yml

      - name: Install WireGuard
        run: |
          sudo apt-get update
          sudo apt-get install -y iproute2 wireguard

      - name: Set up VPN connection
        run: |
          echo "${{ secrets.WG_CONF }}" | sudo tee /etc/wireguard/wg0.conf > /dev/null
          sudo wg-quick up wg0
          sleep 3

      - name: Build with Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: build
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' }}
        env:
          GOOGLE_API_KEY: ${{ secrets.GEMINI }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push docker image
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:latest

      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy on K8s
        run: |
          ssh -t -vvv -p ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            sudo kubectl rollout restart deployment mandamong-deployment -n mandamong
            sudo kubectl rollout status deployment mandamong-deployment -n mandamong
            exit
          EOF
